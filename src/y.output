状態 13 conflicts: 1 shift/reduce


文法

    0 $accept: program $end

    1 program: global

    2 global: %empty
    3       | global statement_list
    4       | error '\n'

    5 statement_list: statement_list '\n' statement
    6               | statement

    7 statement: Print expr
    8          | define_variable
    9          | assign_variable
   10          | if_statement_list

   11 block: '{' statement_list '}'
   12      | statement

   13 if_statement_list: if_statement
   14                  | if_statement else_statement

   15 @1: %empty

   16 if_statement: If expr @1 block

   17 else_statement: Else block

   18 define_variable: Type Id

   19 assign_variable: Id '=' expr

   20 expr: expr Add expr
   21     | expr Sub expr
   22     | expr Mul expr
   23     | expr Div expr
   24     | expr Mod expr
   25     | expr Com expr
   26     | '(' expr ')'
   27     | Num
   28     | RNum
   29     | String
   30     | True
   31     | False
   32     | Id


出現位置の規則による終端

$end (0) 0
'\n' (10) 4 5
'(' (40) 26
')' (41) 26
'=' (61) 19
'{' (123) 11
'}' (125) 11
error (256) 4
Num (258) 27
Type (259) 18
Com (260) 25
RNum (261) 28
Id (262) 18 19 32
String (263) 29
Add (264) 20
Sub (265) 21
Mul (266) 22
Div (267) 23
Mod (268) 24
True (269) 30
False (270) 31
Print (271) 7
If (272) 16
Else (273) 17


出現位置の規則による非終端

$accept (25)
    左辺: 0
program (26)
    左辺: 1, 右辺: 0
global (27)
    左辺: 2 3 4, 右辺: 1 3
statement_list (28)
    左辺: 5 6, 右辺: 3 5 11
statement (29)
    左辺: 7 8 9 10, 右辺: 5 6 12
block (30)
    左辺: 11 12, 右辺: 16 17
if_statement_list (31)
    左辺: 13 14, 右辺: 10
if_statement (32)
    左辺: 16, 右辺: 13 14
@1 (33)
    左辺: 15, 右辺: 16
else_statement (34)
    左辺: 17, 右辺: 14
define_variable (35)
    左辺: 18, 右辺: 8
assign_variable (36)
    左辺: 19, 右辺: 9
expr (37)
    左辺: 20 21 22 23 24 25 26 27 28 29 30 31 32, 右辺: 7 16 19
    20 21 22 23 24 25 26


State 0

    0 $accept: . program $end

    error  shift, and go to state 1

    $end   reduce using rule 2 (global)
    Type   reduce using rule 2 (global)
    Id     reduce using rule 2 (global)
    Print  reduce using rule 2 (global)
    If     reduce using rule 2 (global)

    program  go to state 2
    global   go to state 3


State 1

    4 global: error . '\n'

    '\n'  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: global .
    3 global: global . statement_list

    Type   shift, and go to state 6
    Id     shift, and go to state 7
    Print  shift, and go to state 8
    If     shift, and go to state 9

    $default  reduce using rule 1 (program)

    statement_list     go to state 10
    statement          go to state 11
    if_statement_list  go to state 12
    if_statement       go to state 13
    define_variable    go to state 14
    assign_variable    go to state 15


State 4

    4 global: error '\n' .

    $default  reduce using rule 4 (global)


State 5

    0 $accept: program $end .

    $default  accept


State 6

   18 define_variable: Type . Id

    Id  shift, and go to state 16


State 7

   19 assign_variable: Id . '=' expr

    '='  shift, and go to state 17


State 8

    7 statement: Print . expr

    Num     shift, and go to state 18
    RNum    shift, and go to state 19
    Id      shift, and go to state 20
    String  shift, and go to state 21
    True    shift, and go to state 22
    False   shift, and go to state 23
    '('     shift, and go to state 24

    expr  go to state 25


State 9

   16 if_statement: If . expr @1 block

    Num     shift, and go to state 18
    RNum    shift, and go to state 19
    Id      shift, and go to state 20
    String  shift, and go to state 21
    True    shift, and go to state 22
    False   shift, and go to state 23
    '('     shift, and go to state 24

    expr  go to state 26


State 10

    3 global: global statement_list .
    5 statement_list: statement_list . '\n' statement

    '\n'  shift, and go to state 27

    $default  reduce using rule 3 (global)


State 11

    6 statement_list: statement .

    $default  reduce using rule 6 (statement_list)


State 12

   10 statement: if_statement_list .

    $default  reduce using rule 10 (statement)


State 13

   13 if_statement_list: if_statement .
   14                  | if_statement . else_statement

    Else  shift, and go to state 28

    Else      [reduce using rule 13 (if_statement_list)]
    $default  reduce using rule 13 (if_statement_list)

    else_statement  go to state 29


State 14

    8 statement: define_variable .

    $default  reduce using rule 8 (statement)


State 15

    9 statement: assign_variable .

    $default  reduce using rule 9 (statement)


State 16

   18 define_variable: Type Id .

    $default  reduce using rule 18 (define_variable)


State 17

   19 assign_variable: Id '=' . expr

    Num     shift, and go to state 18
    RNum    shift, and go to state 19
    Id      shift, and go to state 20
    String  shift, and go to state 21
    True    shift, and go to state 22
    False   shift, and go to state 23
    '('     shift, and go to state 24

    expr  go to state 30


State 18

   27 expr: Num .

    $default  reduce using rule 27 (expr)


State 19

   28 expr: RNum .

    $default  reduce using rule 28 (expr)


State 20

   32 expr: Id .

    $default  reduce using rule 32 (expr)


State 21

   29 expr: String .

    $default  reduce using rule 29 (expr)


State 22

   30 expr: True .

    $default  reduce using rule 30 (expr)


State 23

   31 expr: False .

    $default  reduce using rule 31 (expr)


State 24

   26 expr: '(' . expr ')'

    Num     shift, and go to state 18
    RNum    shift, and go to state 19
    Id      shift, and go to state 20
    String  shift, and go to state 21
    True    shift, and go to state 22
    False   shift, and go to state 23
    '('     shift, and go to state 24

    expr  go to state 31


State 25

    7 statement: Print expr .
   20 expr: expr . Add expr
   21     | expr . Sub expr
   22     | expr . Mul expr
   23     | expr . Div expr
   24     | expr . Mod expr
   25     | expr . Com expr

    Com  shift, and go to state 32
    Add  shift, and go to state 33
    Sub  shift, and go to state 34
    Mul  shift, and go to state 35
    Div  shift, and go to state 36
    Mod  shift, and go to state 37

    $default  reduce using rule 7 (statement)


State 26

   16 if_statement: If expr . @1 block
   20 expr: expr . Add expr
   21     | expr . Sub expr
   22     | expr . Mul expr
   23     | expr . Div expr
   24     | expr . Mod expr
   25     | expr . Com expr

    Com  shift, and go to state 32
    Add  shift, and go to state 33
    Sub  shift, and go to state 34
    Mul  shift, and go to state 35
    Div  shift, and go to state 36
    Mod  shift, and go to state 37

    $default  reduce using rule 15 (@1)

    @1  go to state 38


State 27

    5 statement_list: statement_list '\n' . statement

    Type   shift, and go to state 6
    Id     shift, and go to state 7
    Print  shift, and go to state 8
    If     shift, and go to state 9

    statement          go to state 39
    if_statement_list  go to state 12
    if_statement       go to state 13
    define_variable    go to state 14
    assign_variable    go to state 15


State 28

   17 else_statement: Else . block

    Type   shift, and go to state 6
    Id     shift, and go to state 7
    Print  shift, and go to state 8
    If     shift, and go to state 9
    '{'    shift, and go to state 40

    statement          go to state 41
    block              go to state 42
    if_statement_list  go to state 12
    if_statement       go to state 13
    define_variable    go to state 14
    assign_variable    go to state 15


State 29

   14 if_statement_list: if_statement else_statement .

    $default  reduce using rule 14 (if_statement_list)


State 30

   19 assign_variable: Id '=' expr .
   20 expr: expr . Add expr
   21     | expr . Sub expr
   22     | expr . Mul expr
   23     | expr . Div expr
   24     | expr . Mod expr
   25     | expr . Com expr

    Com  shift, and go to state 32
    Add  shift, and go to state 33
    Sub  shift, and go to state 34
    Mul  shift, and go to state 35
    Div  shift, and go to state 36
    Mod  shift, and go to state 37

    $default  reduce using rule 19 (assign_variable)


State 31

   20 expr: expr . Add expr
   21     | expr . Sub expr
   22     | expr . Mul expr
   23     | expr . Div expr
   24     | expr . Mod expr
   25     | expr . Com expr
   26     | '(' expr . ')'

    Com  shift, and go to state 32
    Add  shift, and go to state 33
    Sub  shift, and go to state 34
    Mul  shift, and go to state 35
    Div  shift, and go to state 36
    Mod  shift, and go to state 37
    ')'  shift, and go to state 43


State 32

   25 expr: expr Com . expr

    Num     shift, and go to state 18
    RNum    shift, and go to state 19
    Id      shift, and go to state 20
    String  shift, and go to state 21
    True    shift, and go to state 22
    False   shift, and go to state 23
    '('     shift, and go to state 24

    expr  go to state 44


State 33

   20 expr: expr Add . expr

    Num     shift, and go to state 18
    RNum    shift, and go to state 19
    Id      shift, and go to state 20
    String  shift, and go to state 21
    True    shift, and go to state 22
    False   shift, and go to state 23
    '('     shift, and go to state 24

    expr  go to state 45


State 34

   21 expr: expr Sub . expr

    Num     shift, and go to state 18
    RNum    shift, and go to state 19
    Id      shift, and go to state 20
    String  shift, and go to state 21
    True    shift, and go to state 22
    False   shift, and go to state 23
    '('     shift, and go to state 24

    expr  go to state 46


State 35

   22 expr: expr Mul . expr

    Num     shift, and go to state 18
    RNum    shift, and go to state 19
    Id      shift, and go to state 20
    String  shift, and go to state 21
    True    shift, and go to state 22
    False   shift, and go to state 23
    '('     shift, and go to state 24

    expr  go to state 47


State 36

   23 expr: expr Div . expr

    Num     shift, and go to state 18
    RNum    shift, and go to state 19
    Id      shift, and go to state 20
    String  shift, and go to state 21
    True    shift, and go to state 22
    False   shift, and go to state 23
    '('     shift, and go to state 24

    expr  go to state 48


State 37

   24 expr: expr Mod . expr

    Num     shift, and go to state 18
    RNum    shift, and go to state 19
    Id      shift, and go to state 20
    String  shift, and go to state 21
    True    shift, and go to state 22
    False   shift, and go to state 23
    '('     shift, and go to state 24

    expr  go to state 49


State 38

   16 if_statement: If expr @1 . block

    Type   shift, and go to state 6
    Id     shift, and go to state 7
    Print  shift, and go to state 8
    If     shift, and go to state 9
    '{'    shift, and go to state 40

    statement          go to state 41
    block              go to state 50
    if_statement_list  go to state 12
    if_statement       go to state 13
    define_variable    go to state 14
    assign_variable    go to state 15


State 39

    5 statement_list: statement_list '\n' statement .

    $default  reduce using rule 5 (statement_list)


State 40

   11 block: '{' . statement_list '}'

    Type   shift, and go to state 6
    Id     shift, and go to state 7
    Print  shift, and go to state 8
    If     shift, and go to state 9

    statement_list     go to state 51
    statement          go to state 11
    if_statement_list  go to state 12
    if_statement       go to state 13
    define_variable    go to state 14
    assign_variable    go to state 15


State 41

   12 block: statement .

    $default  reduce using rule 12 (block)


State 42

   17 else_statement: Else block .

    $default  reduce using rule 17 (else_statement)


State 43

   26 expr: '(' expr ')' .

    $default  reduce using rule 26 (expr)


State 44

   20 expr: expr . Add expr
   21     | expr . Sub expr
   22     | expr . Mul expr
   23     | expr . Div expr
   24     | expr . Mod expr
   25     | expr . Com expr
   25     | expr Com expr .

    Add  shift, and go to state 33
    Sub  shift, and go to state 34
    Mul  shift, and go to state 35
    Div  shift, and go to state 36
    Mod  shift, and go to state 37

    $default  reduce using rule 25 (expr)


State 45

   20 expr: expr . Add expr
   20     | expr Add expr .
   21     | expr . Sub expr
   22     | expr . Mul expr
   23     | expr . Div expr
   24     | expr . Mod expr
   25     | expr . Com expr

    Mul  shift, and go to state 35
    Div  shift, and go to state 36
    Mod  shift, and go to state 37

    $default  reduce using rule 20 (expr)


State 46

   20 expr: expr . Add expr
   21     | expr . Sub expr
   21     | expr Sub expr .
   22     | expr . Mul expr
   23     | expr . Div expr
   24     | expr . Mod expr
   25     | expr . Com expr

    Mul  shift, and go to state 35
    Div  shift, and go to state 36
    Mod  shift, and go to state 37

    $default  reduce using rule 21 (expr)


State 47

   20 expr: expr . Add expr
   21     | expr . Sub expr
   22     | expr . Mul expr
   22     | expr Mul expr .
   23     | expr . Div expr
   24     | expr . Mod expr
   25     | expr . Com expr

    $default  reduce using rule 22 (expr)


State 48

   20 expr: expr . Add expr
   21     | expr . Sub expr
   22     | expr . Mul expr
   23     | expr . Div expr
   23     | expr Div expr .
   24     | expr . Mod expr
   25     | expr . Com expr

    $default  reduce using rule 23 (expr)


State 49

   20 expr: expr . Add expr
   21     | expr . Sub expr
   22     | expr . Mul expr
   23     | expr . Div expr
   24     | expr . Mod expr
   24     | expr Mod expr .
   25     | expr . Com expr

    $default  reduce using rule 24 (expr)


State 50

   16 if_statement: If expr @1 block .

    $default  reduce using rule 16 (if_statement)


State 51

    5 statement_list: statement_list . '\n' statement
   11 block: '{' statement_list . '}'

    '\n'  shift, and go to state 27
    '}'   shift, and go to state 52


State 52

   11 block: '{' statement_list '}' .

    $default  reduce using rule 11 (block)
