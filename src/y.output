文法

    0 $accept: start_expr $end

    1 start_expr: expr

    2 expr: Num
    3     | expr Add expr
    4     | expr Sub expr
    5     | expr Mul expr
    6     | expr Div expr
    7     | expr Mod expr
    8     | '(' expr ')'
    9     | expr Eq expr
   10     | expr NotEq expr
   11     | expr Great expr
   12     | expr GreatEq expr
   13     | expr Less expr
   14     | expr LessEq expr


出現位置の規則による終端

$end (0) 0
'(' (40) 8
')' (41) 8
error (256)
Num (258) 2
Add (259) 3
Sub (260) 4
Mul (261) 5
Div (262) 6
Mod (263) 7
Less (264) 13
LessEq (265) 14
Great (266) 11
GreatEq (267) 12
Eq (268) 9
NotEq (269) 10


出現位置の規則による非終端

$accept (17)
    左辺: 0
start_expr (18)
    左辺: 1, 右辺: 0
expr (19)
    左辺: 2 3 4 5 6 7 8 9 10 11 12 13 14, 右辺: 1 3 4 5 6 7 8 9
    10 11 12 13 14


State 0

    0 $accept: . start_expr $end

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    start_expr  go to state 3
    expr        go to state 4


State 1

    2 expr: Num .

    $default  reduce using rule 2 (expr)


State 2

    8 expr: '(' . expr ')'

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 5


State 3

    0 $accept: start_expr . $end

    $end  shift, and go to state 6


State 4

    1 start_expr: expr .
    3 expr: expr . Add expr
    4     | expr . Sub expr
    5     | expr . Mul expr
    6     | expr . Div expr
    7     | expr . Mod expr
    9     | expr . Eq expr
   10     | expr . NotEq expr
   11     | expr . Great expr
   12     | expr . GreatEq expr
   13     | expr . Less expr
   14     | expr . LessEq expr

    Add      shift, and go to state 7
    Sub      shift, and go to state 8
    Mul      shift, and go to state 9
    Div      shift, and go to state 10
    Mod      shift, and go to state 11
    Less     shift, and go to state 12
    LessEq   shift, and go to state 13
    Great    shift, and go to state 14
    GreatEq  shift, and go to state 15
    Eq       shift, and go to state 16
    NotEq    shift, and go to state 17

    $default  reduce using rule 1 (start_expr)


State 5

    3 expr: expr . Add expr
    4     | expr . Sub expr
    5     | expr . Mul expr
    6     | expr . Div expr
    7     | expr . Mod expr
    8     | '(' expr . ')'
    9     | expr . Eq expr
   10     | expr . NotEq expr
   11     | expr . Great expr
   12     | expr . GreatEq expr
   13     | expr . Less expr
   14     | expr . LessEq expr

    Add      shift, and go to state 7
    Sub      shift, and go to state 8
    Mul      shift, and go to state 9
    Div      shift, and go to state 10
    Mod      shift, and go to state 11
    Less     shift, and go to state 12
    LessEq   shift, and go to state 13
    Great    shift, and go to state 14
    GreatEq  shift, and go to state 15
    Eq       shift, and go to state 16
    NotEq    shift, and go to state 17
    ')'      shift, and go to state 18


State 6

    0 $accept: start_expr $end .

    $default  accept


State 7

    3 expr: expr Add . expr

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 19


State 8

    4 expr: expr Sub . expr

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 20


State 9

    5 expr: expr Mul . expr

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 21


State 10

    6 expr: expr Div . expr

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 22


State 11

    7 expr: expr Mod . expr

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 23


State 12

   13 expr: expr Less . expr

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 24


State 13

   14 expr: expr LessEq . expr

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 25


State 14

   11 expr: expr Great . expr

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 26


State 15

   12 expr: expr GreatEq . expr

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 27


State 16

    9 expr: expr Eq . expr

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 28


State 17

   10 expr: expr NotEq . expr

    Num  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 29


State 18

    8 expr: '(' expr ')' .

    $default  reduce using rule 8 (expr)


State 19

    3 expr: expr . Add expr
    3     | expr Add expr .
    4     | expr . Sub expr
    5     | expr . Mul expr
    6     | expr . Div expr
    7     | expr . Mod expr
    9     | expr . Eq expr
   10     | expr . NotEq expr
   11     | expr . Great expr
   12     | expr . GreatEq expr
   13     | expr . Less expr
   14     | expr . LessEq expr

    Mul  shift, and go to state 9
    Div  shift, and go to state 10
    Mod  shift, and go to state 11

    $default  reduce using rule 3 (expr)


State 20

    3 expr: expr . Add expr
    4     | expr . Sub expr
    4     | expr Sub expr .
    5     | expr . Mul expr
    6     | expr . Div expr
    7     | expr . Mod expr
    9     | expr . Eq expr
   10     | expr . NotEq expr
   11     | expr . Great expr
   12     | expr . GreatEq expr
   13     | expr . Less expr
   14     | expr . LessEq expr

    Mul  shift, and go to state 9
    Div  shift, and go to state 10
    Mod  shift, and go to state 11

    $default  reduce using rule 4 (expr)


State 21

    3 expr: expr . Add expr
    4     | expr . Sub expr
    5     | expr . Mul expr
    5     | expr Mul expr .
    6     | expr . Div expr
    7     | expr . Mod expr
    9     | expr . Eq expr
   10     | expr . NotEq expr
   11     | expr . Great expr
   12     | expr . GreatEq expr
   13     | expr . Less expr
   14     | expr . LessEq expr

    $default  reduce using rule 5 (expr)


State 22

    3 expr: expr . Add expr
    4     | expr . Sub expr
    5     | expr . Mul expr
    6     | expr . Div expr
    6     | expr Div expr .
    7     | expr . Mod expr
    9     | expr . Eq expr
   10     | expr . NotEq expr
   11     | expr . Great expr
   12     | expr . GreatEq expr
   13     | expr . Less expr
   14     | expr . LessEq expr

    $default  reduce using rule 6 (expr)


State 23

    3 expr: expr . Add expr
    4     | expr . Sub expr
    5     | expr . Mul expr
    6     | expr . Div expr
    7     | expr . Mod expr
    7     | expr Mod expr .
    9     | expr . Eq expr
   10     | expr . NotEq expr
   11     | expr . Great expr
   12     | expr . GreatEq expr
   13     | expr . Less expr
   14     | expr . LessEq expr

    $default  reduce using rule 7 (expr)


State 24

    3 expr: expr . Add expr
    4     | expr . Sub expr
    5     | expr . Mul expr
    6     | expr . Div expr
    7     | expr . Mod expr
    9     | expr . Eq expr
   10     | expr . NotEq expr
   11     | expr . Great expr
   12     | expr . GreatEq expr
   13     | expr . Less expr
   13     | expr Less expr .
   14     | expr . LessEq expr

    Add  shift, and go to state 7
    Sub  shift, and go to state 8
    Mul  shift, and go to state 9
    Div  shift, and go to state 10
    Mod  shift, and go to state 11

    $default  reduce using rule 13 (expr)


State 25

    3 expr: expr . Add expr
    4     | expr . Sub expr
    5     | expr . Mul expr
    6     | expr . Div expr
    7     | expr . Mod expr
    9     | expr . Eq expr
   10     | expr . NotEq expr
   11     | expr . Great expr
   12     | expr . GreatEq expr
   13     | expr . Less expr
   14     | expr . LessEq expr
   14     | expr LessEq expr .

    Add  shift, and go to state 7
    Sub  shift, and go to state 8
    Mul  shift, and go to state 9
    Div  shift, and go to state 10
    Mod  shift, and go to state 11

    $default  reduce using rule 14 (expr)


State 26

    3 expr: expr . Add expr
    4     | expr . Sub expr
    5     | expr . Mul expr
    6     | expr . Div expr
    7     | expr . Mod expr
    9     | expr . Eq expr
   10     | expr . NotEq expr
   11     | expr . Great expr
   11     | expr Great expr .
   12     | expr . GreatEq expr
   13     | expr . Less expr
   14     | expr . LessEq expr

    Add  shift, and go to state 7
    Sub  shift, and go to state 8
    Mul  shift, and go to state 9
    Div  shift, and go to state 10
    Mod  shift, and go to state 11

    $default  reduce using rule 11 (expr)


State 27

    3 expr: expr . Add expr
    4     | expr . Sub expr
    5     | expr . Mul expr
    6     | expr . Div expr
    7     | expr . Mod expr
    9     | expr . Eq expr
   10     | expr . NotEq expr
   11     | expr . Great expr
   12     | expr . GreatEq expr
   12     | expr GreatEq expr .
   13     | expr . Less expr
   14     | expr . LessEq expr

    Add  shift, and go to state 7
    Sub  shift, and go to state 8
    Mul  shift, and go to state 9
    Div  shift, and go to state 10
    Mod  shift, and go to state 11

    $default  reduce using rule 12 (expr)


State 28

    3 expr: expr . Add expr
    4     | expr . Sub expr
    5     | expr . Mul expr
    6     | expr . Div expr
    7     | expr . Mod expr
    9     | expr . Eq expr
    9     | expr Eq expr .
   10     | expr . NotEq expr
   11     | expr . Great expr
   12     | expr . GreatEq expr
   13     | expr . Less expr
   14     | expr . LessEq expr

    Add  shift, and go to state 7
    Sub  shift, and go to state 8
    Mul  shift, and go to state 9
    Div  shift, and go to state 10
    Mod  shift, and go to state 11

    $default  reduce using rule 9 (expr)


State 29

    3 expr: expr . Add expr
    4     | expr . Sub expr
    5     | expr . Mul expr
    6     | expr . Div expr
    7     | expr . Mod expr
    9     | expr . Eq expr
   10     | expr . NotEq expr
   10     | expr NotEq expr .
   11     | expr . Great expr
   12     | expr . GreatEq expr
   13     | expr . Less expr
   14     | expr . LessEq expr

    Add  shift, and go to state 7
    Sub  shift, and go to state 8
    Mul  shift, and go to state 9
    Div  shift, and go to state 10
    Mod  shift, and go to state 11

    $default  reduce using rule 10 (expr)
